# -*- coding: utf-8 -*-
import os
import logging
from flask import Flask, request, render_template
import telebot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv('BOT_TOKEN')
if not BOT_TOKEN:
    logger.error("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    exit(1)

bot = telebot.TeleBot(BOT_TOKEN)

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
try:
    from handlers.start import setup_start_handlers
    from handlers.register import setup_register_handlers
    from handlers.search import setup_search_handlers
    from handlers.phones import setup_phones_handlers
    from handlers.weather import setup_weather_handlers
    from handlers.other import setup_other_handlers
    from handlers.mechanics import setup_mechanics_handlers
    from handlers.fuel import setup_fuel_handlers
    from handlers.admin import setup_admin_handlers

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    setup_start_handlers(bot)
    setup_register_handlers(bot)
    setup_search_handlers(bot)
    setup_phones_handlers(bot)
    setup_weather_handlers(bot)
    setup_other_handlers(bot)
    setup_mechanics_handlers(bot)
    setup_fuel_handlers(bot)
    setup_admin_handlers(bot)

    logger.info("‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")

except Exception as e:
    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {e}")
    exit(1)

# WEB APP –ú–ê–†–®–†–£–¢–´
@app.route("/webapp")
def webapp():
    """–û—Å–Ω–æ–≤–Ω–æ–π Web App –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"""
    return render_template('webapp.html')

@app.route("/webapp/test")
def webapp_test():
    """–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ Web App"""
    return """
    <!DOCTYPE html>
    <html>
    <head>
        <title>–¢–µ—Å—Ç Web App</title>
        <script src="https://telegram.org/js/telegram-web-app.js"></script>
        <style>
            body {
                font-family: Arial, sans-serif;
                padding: 20px;
                text-align: center;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                min-height: 100vh;
                margin: 0;
            }
            .container {
                max-width: 400px;
                margin: 0 auto;
                padding-top: 50px;
            }
            button {
                background: white;
                color: #667eea;
                border: none;
                padding: 12px 25px;
                border-radius: 20px;
                font-size: 16px;
                cursor: pointer;
                margin: 10px;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>üöç –®–ï–°–¢–û–ï –≠–õ–ï–ö–¢–†–ò–ß–ï–°–¢–í–û</h1>
            <p>‚úÖ Web App —Ç–µ—Å—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!</p>
            <button onclick="Telegram.WebApp.close()">–ó–∞–∫—Ä—ã—Ç—å</button>
        </div>
        <script>
            Telegram.WebApp.ready();
            Telegram.WebApp.expand();
        </script>
    </body>
    </html>
    """

# WEBHOOK –ú–ê–†–®–†–£–¢
@app.route('/webhook', methods=['POST'])
def webhook():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ webhook –æ—Ç Telegram"""
    logger.info("üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Telegram")
    try:
        json_string = request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_string)

        if update.message:
            logger.info(f"üë§ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {update.message.from_user.id}: {update.message.text}")

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.process_new_updates([update])
        logger.info("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –±–æ—Ç–æ–º")
        return "!", 200

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}", exc_info=True)
        return "Error", 500

# –°–¢–†–ê–ù–ò–¶–´
@app.route("/")
def index():
    return "üöç –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–π –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! Web App: /webapp"

@app.route("/health")
def health():
    return "OK", 200

@app.route("/setup_webhook")
def setup_webhook():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook (–≤—ã–∑–≤–∞—Ç—å –æ–¥–∏–Ω —Ä–∞–∑ –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è)"""
    webhook_url = f'https://{request.host}/webhook'
    result = bot.set_webhook(url=webhook_url)
    return f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url} - {result}"

# –ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê
if __name__ == "__main__":
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port, debug=False)